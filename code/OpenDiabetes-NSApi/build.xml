<?xml version="1.0" encoding="UTF-8"?>
<project name="OpenDiabetes-NSApi" default="main" basedir=".">
    <description>Builds, tests, and runs the project OpenDiabetes-NSApi.</description>
    <property file="build.properties"/>
    <property name="src.dir" value="${basedir}/src"/>
    <property name="src.test.dir" value="${basedir}/test"/>
    <property name="resources.dir" value="${basedir}/resources"/>
    <property name="output.dir" value="${basedir}/dist"/>
    <property name="build.classes.dir" value="${basedir}/build/classes"/>
    <property name="build.test.dir" value="${basedir}/build/test"/>

    <path id="classpath">
        <fileset dir="../OpenDiabetes-NSApi/dist" includes="*.jar"/>
    </path>

    <path id="junit.classpath">
        <fileset dir="${basedir}/../../lib/junit" includes="*.jar"/>
    </path>

    <path id="test.classpath">
        <pathelement path="${build.classes.dir}"/>
        <pathelement path="${build.test.dir}"/>
        <fileset dir="${ant.home}/lib" includes="*.jar"/>
    </path>

    <target name="full" depends="clean, unjar, compile, compress, test"
            description="Clean, build jar with all librarys, run tests"/>
    <target name="main" depends="unjar, compile, compress" description="Build jar with existing librarys"/>

    <target name="clean">
        <delete dir="${build.classes.dir}" failonerror="false"/>
        <delete dir="${output.dir}" failonerror="false"/>
        <mkdir dir="${build.classes.dir}"/>
        <mkdir dir="${output.dir}"/>
    </target>

    <target name="unjar">
        <unjar dest="${build.classes.dir}" overwrite="false">
            <fileset dir="../OpenDiabetes-Parser/dist" includes="*.jar"/>
        </unjar>
    </target>

    <target name="getversion">
        <tstamp>
            <format property="TODAY_MY" pattern="dd.MM.yyyy HH.mm" locale="en,UK"/>
        </tstamp>
        <exec executable="git" outputproperty="git.revision" failifexecutionfails="false" errorproperty="UNKNOWN">
            <arg value="rev-parse"/>
            <arg value="--short"/>
            <arg value="HEAD"/>
        </exec>
        <property name="build.number" value="git-${git.revision} ${TODAY_MY}"/>
    </target>

    <target name="compile" depends="getversion">
        <javac srcdir="${src.dir}" destdir="${build.classes.dir}">
            <classpath refid="classpath"/>
            <compilerarg line="-encoding utf-8"/>
        </javac>
        <copy todir="${build.classes.dir}">
            <fileset dir="${resources.dir}" erroronmissingdir="false"/>
        </copy>
    </target>

    <target name="compress" depends="getversion">
        <tstamp/>
        <jar destfile="${output.dir}/${jarname}" basedir="${build.classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${mainclass}"/>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Built-Date" value="${TODAY_MY}"/>
                <attribute name="Version" value="${build.number}"/>
                <attribute name="Revision" value="${build.number}"/>
            </manifest>
        </jar>
    </target>

    <target name="compile-test" depends="compile">
        <mkdir dir="${build.test.dir}"/>
        <javac srcdir="${src.test.dir}" destdir="${build.test.dir}">
            <classpath refid="classpath"/>
            <classpath refid="junit.classpath"/>
            <compilerarg line="-encoding utf-8"/>
        </javac>
    </target>

    <target name="test" depends="compile-test">
        <junitlauncher haltonfailure="true" printsummary="true">
            <classpath refid="junit.classpath"/>
            <classpath refid="test.classpath"/>
            <testclasses outputdir="${output.dir}">
                <fileset dir="${build.test.dir}" includes="**"/>
            </testclasses>
            <listener type="legacy-plain" sendsysout="true" sendsyserr="true"/>
        </junitlauncher>
    </target>
</project>
