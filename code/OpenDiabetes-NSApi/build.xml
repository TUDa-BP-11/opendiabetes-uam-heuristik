<?xml version="1.0" encoding="UTF-8"?>
<project name="OpenDiabetes-NSApi" default="default" basedir=".">
    <description>Builds, tests, and runs the project OpenDiabetes-NSApi.</description>
    <import file="nbproject/build-impl.xml"/>
    <!--
    There exist several targets which are by default empty and which can be 
    used for execution of your tasks. These targets are usually executed 
    before and after some main targets. They are: 

      -pre-init:                 called before initialization of project properties
      -post-init:                called after initialization of project properties
      -pre-compile:              called before javac compilation
      -post-compile:             called after javac compilation
      -pre-compile-single:       called before javac compilation of single file
      -post-compile-single:      called after javac compilation of single file
      -pre-compile-test:         called before javac compilation of JUnit tests
      -post-compile-test:        called after javac compilation of JUnit tests
      -pre-compile-test-single:  called before javac compilation of single JUnit test
      -post-compile-test-single: called after javac compilation of single JUunit test
      -pre-jar:                  called before JAR building
      -post-jar:                 called after JAR building
      -post-clean:               called after cleaning build products
    -->

    <!-- OpenDiabetesVault-Engine properties -->
    <property name="engine.dir" value="${basedir}/../OpenDiabetesVault-Engine"/>
    <property name="engine.jar" value="OpenDiabetesVault-Engine.jar"/>

    <target name="full" depends="clean, jar, junit5-test" description="Clean, build jar with all libraries, run tests"/>

    <target name="-pre-jar" depends="init">
        <unjar dest="${build.classes.dir}" overwrite="false">
            <filelist dir="${engine.dir}/dist">
                <file name="${engine.jar}"/>
            </filelist>
            <filelist dir="${libraries.dir}">
                <file name="unirest-java-1.4.10-SNAPSHOT-jar-with-dependencies.jar"/>
                <file name="JSAP-2.1.jar"/>
            </filelist>
        </unjar>
    </target>

    <!-- Tests -->
    <condition property="junit5.cantest">
        <and>
            <antversion atleast="1.10.3"/>
            <available classname="org.junit.platform.launcher.core.LauncherFactory"/>
            <available classname="org.junit.platform.commons.util.Preconditions"/>
            <available classname="org.junit.platform.engine.TestEngine"/>
        </and>
    </condition>

    <target name="junit5-test-check" unless="junit5.cantest" description="Prints a warning if the current version of ant does not support tests">
        <echo>One of the following conditions to run tests is not met:</echo>
        <echo>Ant version 1.10.3 or newer</echo>
        <echo>JUnit Platform Launcher, Commons and Engine need to available in the ant classpath</echo>
    </target>

    <target name="junit5-test" if="junit5.cantest" depends="-pre-pre-jar, junit5-test-check, compile-test"
            description="Runs the tests. Ant version 1.10.3 or higher required">

        <junitlauncher haltonfailure="true" printsummary="true">
            <classpath>
                <pathelement path="${build.classes.dir}"/>
                <pathelement path="${build.test.classes.dir}"/>
                <fileset dir="${libraries.dir}" includes="*.jar"/>
                <fileset dir="${libraries.dir}/junit" includes="*.jar"/>
            </classpath>
            <testclasses outputdir="${dist.jar.dir}">
                <fileset dir="${build.test.classes.dir}" includes="**"/>
            </testclasses>
            <listener type="legacy-plain" sendsysout="true" sendsyserr="true"/>
        </junitlauncher>
    </target>
</project>
